package br.unesp.banco.screens.main;


import br.unesp.banco.core.ui.JFrameLoader;
import br.unesp.banco.core.ui.JFrameManager;
import br.unesp.banco.core.ui.Screen;
import br.unesp.banco.screens.deposit.DepositScreen;
import br.unesp.banco.screens.login.LoginScreen;
import br.unesp.banco.screens.statement.StatementScreen;
import br.unesp.banco.screens.transfer.TransferScreen;
import br.unesp.banco.screens.withdraw.WithdrawScreen;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;


public class MainAccountScreen extends Screen {
    private JButton bankStatementButton;
    private JPanel bodyPanel;
    private JPanel PainelInfo;
    private JLabel welcome;
    private JPanel mainPanel;
    private JPanel painelBts;
    private JButton exitButton;
    private JButton transferButton;
    private JButton withdrawButton;
    private JButton depositButton;

    public final static int WIDTH = 700;
    public final static int HEIGHT = 450;

    public MainAccountScreen(JFrameManager frameManager) {
        super(frameManager);

        exitButton.addActionListener(e -> JFrameLoader.load(getFrameManager(), LoginScreen.class, "Login"));
        bankStatementButton.addActionListener(e -> JFrameLoader.load(getFrameManager(), StatementScreen.class, "Extrato"));

        transferButton.addActionListener(e -> JFrameLoader.load(getFrameManager(), TransferScreen.class, TransferScreen.WIDTH, TransferScreen.HEIGHT, "Transferência"));
        withdrawButton.addActionListener(e -> JFrameLoader.load(getFrameManager(), WithdrawScreen.class, WithdrawScreen.WIDTH, WithdrawScreen.HEIGHT, "Saque"));
        depositButton.addActionListener(e -> JFrameLoader.load(getFrameManager(), DepositScreen.class, DepositScreen.WIDTH, DepositScreen.HEIGHT, "Depósito"));
    }

    @Override
    public void addStyle() {
    }

    @Override
    public JPanel getMainPanel() {
        return bodyPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setBackground(new Color(-1));
        mainPanel.setForeground(new Color(-1));
        bodyPanel = new JPanel();
        bodyPanel.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        bodyPanel.setBackground(new Color(-1));
        bodyPanel.setEnabled(true);
        bodyPanel.setForeground(new Color(-1));
        mainPanel.add(bodyPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        painelBts = new JPanel();
        painelBts.setLayout(new GridBagLayout());
        painelBts.setBackground(new Color(-1));
        painelBts.setEnabled(true);
        painelBts.setForeground(new Color(-1));
        bodyPanel.add(painelBts, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        painelBts.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(0, 20, 20, 20), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        exitButton = new JButton();
        exitButton.setActionCommand("Saque");
        exitButton.setAutoscrolls(false);
        exitButton.setBackground(new Color(-16777216));
        exitButton.setBorderPainted(false);
        exitButton.setFocusPainted(false);
        Font exitButtonFont = this.$$$getFont$$$("IBM Plex Sans", Font.BOLD, 20, exitButton.getFont());
        if (exitButtonFont != null) exitButton.setFont(exitButtonFont);
        exitButton.setForeground(new Color(-1));
        exitButton.setHorizontalAlignment(4);
        exitButton.setMargin(new Insets(20, 20, 20, 20));
        exitButton.setText("Sair");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.ipadx = 220;
        painelBts.add(exitButton, gbc);
        PainelInfo = new JPanel();
        PainelInfo.setLayout(new GridLayoutManager(1, 2, new Insets(0, 20, 0, 0), -1, -1));
        PainelInfo.setBackground(new Color(-1));
        bodyPanel.add(PainelInfo, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        welcome = new JLabel();
        welcome.setFocusable(false);
        Font welcomeFont = this.$$$getFont$$$("IBM Plex Sans", Font.PLAIN, 20, welcome.getFont());
        if (welcomeFont != null) welcome.setFont(welcomeFont);
        welcome.setForeground(new Color(-16777216));
        welcome.setText("Olá, o que deseja fazer hoje?");
        PainelInfo.add(welcome, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        panel1.setBackground(new Color(-1));
        panel1.setForeground(new Color(-1));
        bodyPanel.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(0, 20, 20, 20), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        bankStatementButton = new JButton();
        bankStatementButton.setBackground(new Color(-14452481));
        bankStatementButton.setBorderPainted(false);
        bankStatementButton.setFocusPainted(false);
        Font bankStatementButtonFont = this.$$$getFont$$$("IBM Plex Sans", Font.BOLD, 20, bankStatementButton.getFont());
        if (bankStatementButtonFont != null) bankStatementButton.setFont(bankStatementButtonFont);
        bankStatementButton.setForeground(new Color(-1));
        bankStatementButton.setHorizontalAlignment(2);
        bankStatementButton.setMargin(new Insets(20, 20, 20, 20));
        bankStatementButton.setText("Extrato");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 0.8;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 0, 10);
        panel1.add(bankStatementButton, gbc);
        depositButton = new JButton();
        depositButton.setActionCommand("Saque");
        depositButton.setAutoscrolls(false);
        depositButton.setBackground(new Color(-14452481));
        depositButton.setBorderPainted(false);
        depositButton.setFocusPainted(false);
        Font depositButtonFont = this.$$$getFont$$$("IBM Plex Sans", Font.BOLD, 20, depositButton.getFont());
        if (depositButtonFont != null) depositButton.setFont(depositButtonFont);
        depositButton.setForeground(new Color(-1));
        depositButton.setHorizontalAlignment(4);
        depositButton.setMargin(new Insets(20, 20, 20, 20));
        depositButton.setText("Depósito");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 0.7;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 10, 0, 0);
        panel1.add(depositButton, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel2.setAutoscrolls(false);
        panel2.setBackground(new Color(-1));
        panel2.setForeground(new Color(-1));
        bodyPanel.add(panel2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(0, 20, 20, 20), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        transferButton = new JButton();
        transferButton.setBackground(new Color(-14452481));
        transferButton.setBorderPainted(false);
        transferButton.setFocusPainted(false);
        Font transferButtonFont = this.$$$getFont$$$("IBM Plex Sans", Font.BOLD, 20, transferButton.getFont());
        if (transferButtonFont != null) transferButton.setFont(transferButtonFont);
        transferButton.setForeground(new Color(-1));
        transferButton.setHorizontalAlignment(2);
        transferButton.setMargin(new Insets(20, 20, 20, 20));
        transferButton.setText("Transferência");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 0.5;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 0, 10);
        panel2.add(transferButton, gbc);
        withdrawButton = new JButton();
        withdrawButton.setActionCommand("Saque");
        withdrawButton.setAutoscrolls(false);
        withdrawButton.setBackground(new Color(-14452481));
        withdrawButton.setBorderPainted(false);
        withdrawButton.setFocusPainted(false);
        Font withdrawButtonFont = this.$$$getFont$$$("IBM Plex Sans", Font.BOLD, 20, withdrawButton.getFont());
        if (withdrawButtonFont != null) withdrawButton.setFont(withdrawButtonFont);
        withdrawButton.setForeground(new Color(-1));
        withdrawButton.setHorizontalAlignment(4);
        withdrawButton.setMargin(new Insets(20, 20, 20, 20));
        withdrawButton.setText("Saque");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 0.7;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 10, 0, 0);
        panel2.add(withdrawButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
