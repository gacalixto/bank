package br.unesp.banco.screens.openaccount;

import br.unesp.banco.app.account.AccountFacade;
import br.unesp.banco.core.ui.Popup;
import br.unesp.banco.core.ui.*;
import br.unesp.banco.screens.login.LoginScreen;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.util.Random;

public class OpenAccountScreen extends Screen {
    private JPanel mainPanel;
    private JButton openAccountButton;
    private JPasswordField passwordInput;
    private JButton loginButton;
    private JLabel errorMessage;

    public OpenAccountScreen(JFrameManager frameManager) {
        super(frameManager);
        loginButton.addActionListener(e -> JFrameLoader.load(getFrameManager(), LoginScreen.class, "Acessar conta"));

        openAccountButton.addActionListener(e -> {

            String accountNumber = String.valueOf(10000000 + new Random().nextInt(90000000));

            Clipboard.copy(accountNumber);

            AccountFacade accountFacade = (AccountFacade) getFrameManager().getFacades().get("account");

            try {
                confirmAccount(accountNumber, accountFacade);
            } catch (Exception exception) {
                errorMessage.setText(exception.getMessage());

            }
        });


    }

    public void confirmAccount(String accountNumber, AccountFacade accountFacade) throws Exception {
        accountFacade.createAccount(accountNumber, new String(passwordInput.getPassword()));
        JFrameLoader.load(getFrameManager(), LoginScreen.class, "Acessar conta");
        Popup.show("Nova conta bancária",
                String.format("<html>" +
                        "<h1>Conta criada</h1>" +
                        "<p>nº da conta: <b>%s</b></p>" +
                        "<p>Agora você já pode acessá-la<br/></p>" +
                        "</html>", accountNumber),
                "Copiar nº da conta para a área de transferência",
                () -> (Void) Clipboard.copy(accountNumber));

    }

    public void addStyle() {
        passwordInput.setSize(passwordInput.getWidth(), 100);
        passwordInput.setBorder(BorderFactory.createCompoundBorder(
                passwordInput.getBorder(),
                BorderFactory.createEmptyBorder(10, 10, 10, 10)));
    }


    public JPanel getMainPanel() {
        return mainPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        mainPanel.setBackground(new Color(-1));
        mainPanel.setDoubleBuffered(false);
        mainPanel.setForeground(new Color(-1907998));
        mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        openAccountButton = new JButton();
        openAccountButton.setBackground(new Color(-14452481));
        openAccountButton.setBorderPainted(false);
        openAccountButton.setFocusPainted(false);
        Font openAccountButtonFont = this.$$$getFont$$$("IBM Plex Sans", -1, 20, openAccountButton.getFont());
        if (openAccountButtonFont != null) openAccountButton.setFont(openAccountButtonFont);
        openAccountButton.setForeground(new Color(-1));
        openAccountButton.setMargin(new Insets(20, 20, 20, 20));
        openAccountButton.setText("Abrir conta");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(openAccountButton, gbc);
        passwordInput = new JPasswordField();
        passwordInput.setBackground(new Color(-1));
        passwordInput.setCaretColor(new Color(-16777216));
        passwordInput.setDisabledTextColor(new Color(-1));
        passwordInput.setFocusable(true);
        Font passwordInputFont = this.$$$getFont$$$("IBM Plex Sans", -1, 18, passwordInput.getFont());
        if (passwordInputFont != null) passwordInput.setFont(passwordInputFont);
        passwordInput.setForeground(new Color(-16777216));
        passwordInput.setInheritsPopupMenu(false);
        passwordInput.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 0, 10, 0);
        mainPanel.add(passwordInput, gbc);
        final JLabel label1 = new JLabel();
        label1.setBackground(new Color(-1907998));
        Font label1Font = this.$$$getFont$$$("IBM Plex Sans", -1, 18, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-16777216));
        label1.setText("Insira a senha referente a sua nova conta");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label1, gbc);
        loginButton = new JButton();
        loginButton.setBackground(new Color(-16777216));
        loginButton.setBorderPainted(false);
        loginButton.setContentAreaFilled(false);
        loginButton.setFocusPainted(false);
        Font loginButtonFont = this.$$$getFont$$$("IBM Plex Sans", -1, 20, loginButton.getFont());
        if (loginButtonFont != null) loginButton.setFont(loginButtonFont);
        loginButton.setForeground(new Color(-16777216));
        loginButton.setMargin(new Insets(20, 20, 20, 20));
        loginButton.setText("Acessar conta");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(loginButton, gbc);
        errorMessage = new JLabel();
        Font errorMessageFont = this.$$$getFont$$$("IBM Plex Sans", -1, 18, errorMessage.getFont());
        if (errorMessageFont != null) errorMessage.setFont(errorMessageFont);
        errorMessage.setForeground(new Color(-2555883));
        errorMessage.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(errorMessage, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
